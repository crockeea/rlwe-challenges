// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Lol.proto

#ifndef PROTOBUF_Lol_2eproto__INCLUDED
#define PROTOBUF_Lol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Lol_2eproto();
void protobuf_AssignDesc_Lol_2eproto();
void protobuf_ShutdownFile_Lol_2eproto();

class LinearRq;
class R;
class Rq1;
class Kq1;
class RqProduct;
class KqProduct;
class TypeRep;

// ===================================================================

class LinearRq : public ::google::protobuf::Message {
 public:
  LinearRq();
  virtual ~LinearRq();

  LinearRq(const LinearRq& from);

  inline LinearRq& operator=(const LinearRq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LinearRq& default_instance();

  void Swap(LinearRq* other);

  // implements Message ----------------------------------------------

  LinearRq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LinearRq& from);
  void MergeFrom(const LinearRq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 e = 1;
  inline bool has_e() const;
  inline void clear_e();
  static const int kEFieldNumber = 1;
  inline ::google::protobuf::uint32 e() const;
  inline void set_e(::google::protobuf::uint32 value);

  // required uint32 r = 2;
  inline bool has_r() const;
  inline void clear_r();
  static const int kRFieldNumber = 2;
  inline ::google::protobuf::uint32 r() const;
  inline void set_r(::google::protobuf::uint32 value);

  // repeated .RqProduct coeffs = 3;
  inline int coeffs_size() const;
  inline void clear_coeffs();
  static const int kCoeffsFieldNumber = 3;
  inline const ::RqProduct& coeffs(int index) const;
  inline ::RqProduct* mutable_coeffs(int index);
  inline ::RqProduct* add_coeffs();
  inline const ::google::protobuf::RepeatedPtrField< ::RqProduct >&
      coeffs() const;
  inline ::google::protobuf::RepeatedPtrField< ::RqProduct >*
      mutable_coeffs();

  // @@protoc_insertion_point(class_scope:LinearRq)
 private:
  inline void set_has_e();
  inline void clear_has_e();
  inline void set_has_r();
  inline void clear_has_r();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 e_;
  ::google::protobuf::uint32 r_;
  ::google::protobuf::RepeatedPtrField< ::RqProduct > coeffs_;
  friend void  protobuf_AddDesc_Lol_2eproto();
  friend void protobuf_AssignDesc_Lol_2eproto();
  friend void protobuf_ShutdownFile_Lol_2eproto();

  void InitAsDefaultInstance();
  static LinearRq* default_instance_;
};
// -------------------------------------------------------------------

class R : public ::google::protobuf::Message {
 public:
  R();
  virtual ~R();

  R(const R& from);

  inline R& operator=(const R& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const R& default_instance();

  void Swap(R* other);

  // implements Message ----------------------------------------------

  R* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const R& from);
  void MergeFrom(const R& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 m = 1;
  inline bool has_m() const;
  inline void clear_m();
  static const int kMFieldNumber = 1;
  inline ::google::protobuf::uint32 m() const;
  inline void set_m(::google::protobuf::uint32 value);

  // repeated sint64 xs = 2;
  inline int xs_size() const;
  inline void clear_xs();
  static const int kXsFieldNumber = 2;
  inline ::google::protobuf::int64 xs(int index) const;
  inline void set_xs(int index, ::google::protobuf::int64 value);
  inline void add_xs(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      xs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_xs();

  // @@protoc_insertion_point(class_scope:R)
 private:
  inline void set_has_m();
  inline void clear_has_m();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > xs_;
  ::google::protobuf::uint32 m_;
  friend void  protobuf_AddDesc_Lol_2eproto();
  friend void protobuf_AssignDesc_Lol_2eproto();
  friend void protobuf_ShutdownFile_Lol_2eproto();

  void InitAsDefaultInstance();
  static R* default_instance_;
};
// -------------------------------------------------------------------

class Rq1 : public ::google::protobuf::Message {
 public:
  Rq1();
  virtual ~Rq1();

  Rq1(const Rq1& from);

  inline Rq1& operator=(const Rq1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Rq1& default_instance();

  void Swap(Rq1* other);

  // implements Message ----------------------------------------------

  Rq1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Rq1& from);
  void MergeFrom(const Rq1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 m = 1;
  inline bool has_m() const;
  inline void clear_m();
  static const int kMFieldNumber = 1;
  inline ::google::protobuf::uint32 m() const;
  inline void set_m(::google::protobuf::uint32 value);

  // required uint64 q = 2;
  inline bool has_q() const;
  inline void clear_q();
  static const int kQFieldNumber = 2;
  inline ::google::protobuf::uint64 q() const;
  inline void set_q(::google::protobuf::uint64 value);

  // repeated sint64 xs = 3;
  inline int xs_size() const;
  inline void clear_xs();
  static const int kXsFieldNumber = 3;
  inline ::google::protobuf::int64 xs(int index) const;
  inline void set_xs(int index, ::google::protobuf::int64 value);
  inline void add_xs(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      xs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_xs();

  // @@protoc_insertion_point(class_scope:Rq1)
 private:
  inline void set_has_m();
  inline void clear_has_m();
  inline void set_has_q();
  inline void clear_has_q();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 q_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > xs_;
  ::google::protobuf::uint32 m_;
  friend void  protobuf_AddDesc_Lol_2eproto();
  friend void protobuf_AssignDesc_Lol_2eproto();
  friend void protobuf_ShutdownFile_Lol_2eproto();

  void InitAsDefaultInstance();
  static Rq1* default_instance_;
};
// -------------------------------------------------------------------

class Kq1 : public ::google::protobuf::Message {
 public:
  Kq1();
  virtual ~Kq1();

  Kq1(const Kq1& from);

  inline Kq1& operator=(const Kq1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Kq1& default_instance();

  void Swap(Kq1* other);

  // implements Message ----------------------------------------------

  Kq1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Kq1& from);
  void MergeFrom(const Kq1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 m = 1;
  inline bool has_m() const;
  inline void clear_m();
  static const int kMFieldNumber = 1;
  inline ::google::protobuf::uint32 m() const;
  inline void set_m(::google::protobuf::uint32 value);

  // required uint64 q = 2;
  inline bool has_q() const;
  inline void clear_q();
  static const int kQFieldNumber = 2;
  inline ::google::protobuf::uint64 q() const;
  inline void set_q(::google::protobuf::uint64 value);

  // repeated double xs = 3;
  inline int xs_size() const;
  inline void clear_xs();
  static const int kXsFieldNumber = 3;
  inline double xs(int index) const;
  inline void set_xs(int index, double value);
  inline void add_xs(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      xs() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_xs();

  // @@protoc_insertion_point(class_scope:Kq1)
 private:
  inline void set_has_m();
  inline void clear_has_m();
  inline void set_has_q();
  inline void clear_has_q();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 q_;
  ::google::protobuf::RepeatedField< double > xs_;
  ::google::protobuf::uint32 m_;
  friend void  protobuf_AddDesc_Lol_2eproto();
  friend void protobuf_AssignDesc_Lol_2eproto();
  friend void protobuf_ShutdownFile_Lol_2eproto();

  void InitAsDefaultInstance();
  static Kq1* default_instance_;
};
// -------------------------------------------------------------------

class RqProduct : public ::google::protobuf::Message {
 public:
  RqProduct();
  virtual ~RqProduct();

  RqProduct(const RqProduct& from);

  inline RqProduct& operator=(const RqProduct& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RqProduct& default_instance();

  void Swap(RqProduct* other);

  // implements Message ----------------------------------------------

  RqProduct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RqProduct& from);
  void MergeFrom(const RqProduct& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Rq1 rqlist = 1;
  inline int rqlist_size() const;
  inline void clear_rqlist();
  static const int kRqlistFieldNumber = 1;
  inline const ::Rq1& rqlist(int index) const;
  inline ::Rq1* mutable_rqlist(int index);
  inline ::Rq1* add_rqlist();
  inline const ::google::protobuf::RepeatedPtrField< ::Rq1 >&
      rqlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::Rq1 >*
      mutable_rqlist();

  // @@protoc_insertion_point(class_scope:RqProduct)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Rq1 > rqlist_;
  friend void  protobuf_AddDesc_Lol_2eproto();
  friend void protobuf_AssignDesc_Lol_2eproto();
  friend void protobuf_ShutdownFile_Lol_2eproto();

  void InitAsDefaultInstance();
  static RqProduct* default_instance_;
};
// -------------------------------------------------------------------

class KqProduct : public ::google::protobuf::Message {
 public:
  KqProduct();
  virtual ~KqProduct();

  KqProduct(const KqProduct& from);

  inline KqProduct& operator=(const KqProduct& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KqProduct& default_instance();

  void Swap(KqProduct* other);

  // implements Message ----------------------------------------------

  KqProduct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KqProduct& from);
  void MergeFrom(const KqProduct& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Kq1 kqlist = 1;
  inline int kqlist_size() const;
  inline void clear_kqlist();
  static const int kKqlistFieldNumber = 1;
  inline const ::Kq1& kqlist(int index) const;
  inline ::Kq1* mutable_kqlist(int index);
  inline ::Kq1* add_kqlist();
  inline const ::google::protobuf::RepeatedPtrField< ::Kq1 >&
      kqlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::Kq1 >*
      mutable_kqlist();

  // @@protoc_insertion_point(class_scope:KqProduct)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Kq1 > kqlist_;
  friend void  protobuf_AddDesc_Lol_2eproto();
  friend void protobuf_AssignDesc_Lol_2eproto();
  friend void protobuf_ShutdownFile_Lol_2eproto();

  void InitAsDefaultInstance();
  static KqProduct* default_instance_;
};
// -------------------------------------------------------------------

class TypeRep : public ::google::protobuf::Message {
 public:
  TypeRep();
  virtual ~TypeRep();

  TypeRep(const TypeRep& from);

  inline TypeRep& operator=(const TypeRep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TypeRep& default_instance();

  void Swap(TypeRep* other);

  // implements Message ----------------------------------------------

  TypeRep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TypeRep& from);
  void MergeFrom(const TypeRep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 a = 1;
  inline bool has_a() const;
  inline void clear_a();
  static const int kAFieldNumber = 1;
  inline ::google::protobuf::uint64 a() const;
  inline void set_a(::google::protobuf::uint64 value);

  // required uint64 b = 2;
  inline bool has_b() const;
  inline void clear_b();
  static const int kBFieldNumber = 2;
  inline ::google::protobuf::uint64 b() const;
  inline void set_b(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TypeRep)
 private:
  inline void set_has_a();
  inline void clear_has_a();
  inline void set_has_b();
  inline void clear_has_b();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 a_;
  ::google::protobuf::uint64 b_;
  friend void  protobuf_AddDesc_Lol_2eproto();
  friend void protobuf_AssignDesc_Lol_2eproto();
  friend void protobuf_ShutdownFile_Lol_2eproto();

  void InitAsDefaultInstance();
  static TypeRep* default_instance_;
};
// ===================================================================


// ===================================================================

// LinearRq

// required uint32 e = 1;
inline bool LinearRq::has_e() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LinearRq::set_has_e() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LinearRq::clear_has_e() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LinearRq::clear_e() {
  e_ = 0u;
  clear_has_e();
}
inline ::google::protobuf::uint32 LinearRq::e() const {
  // @@protoc_insertion_point(field_get:LinearRq.e)
  return e_;
}
inline void LinearRq::set_e(::google::protobuf::uint32 value) {
  set_has_e();
  e_ = value;
  // @@protoc_insertion_point(field_set:LinearRq.e)
}

// required uint32 r = 2;
inline bool LinearRq::has_r() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LinearRq::set_has_r() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LinearRq::clear_has_r() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LinearRq::clear_r() {
  r_ = 0u;
  clear_has_r();
}
inline ::google::protobuf::uint32 LinearRq::r() const {
  // @@protoc_insertion_point(field_get:LinearRq.r)
  return r_;
}
inline void LinearRq::set_r(::google::protobuf::uint32 value) {
  set_has_r();
  r_ = value;
  // @@protoc_insertion_point(field_set:LinearRq.r)
}

// repeated .RqProduct coeffs = 3;
inline int LinearRq::coeffs_size() const {
  return coeffs_.size();
}
inline void LinearRq::clear_coeffs() {
  coeffs_.Clear();
}
inline const ::RqProduct& LinearRq::coeffs(int index) const {
  // @@protoc_insertion_point(field_get:LinearRq.coeffs)
  return coeffs_.Get(index);
}
inline ::RqProduct* LinearRq::mutable_coeffs(int index) {
  // @@protoc_insertion_point(field_mutable:LinearRq.coeffs)
  return coeffs_.Mutable(index);
}
inline ::RqProduct* LinearRq::add_coeffs() {
  // @@protoc_insertion_point(field_add:LinearRq.coeffs)
  return coeffs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RqProduct >&
LinearRq::coeffs() const {
  // @@protoc_insertion_point(field_list:LinearRq.coeffs)
  return coeffs_;
}
inline ::google::protobuf::RepeatedPtrField< ::RqProduct >*
LinearRq::mutable_coeffs() {
  // @@protoc_insertion_point(field_mutable_list:LinearRq.coeffs)
  return &coeffs_;
}

// -------------------------------------------------------------------

// R

// required uint32 m = 1;
inline bool R::has_m() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void R::set_has_m() {
  _has_bits_[0] |= 0x00000001u;
}
inline void R::clear_has_m() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void R::clear_m() {
  m_ = 0u;
  clear_has_m();
}
inline ::google::protobuf::uint32 R::m() const {
  // @@protoc_insertion_point(field_get:R.m)
  return m_;
}
inline void R::set_m(::google::protobuf::uint32 value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:R.m)
}

// repeated sint64 xs = 2;
inline int R::xs_size() const {
  return xs_.size();
}
inline void R::clear_xs() {
  xs_.Clear();
}
inline ::google::protobuf::int64 R::xs(int index) const {
  // @@protoc_insertion_point(field_get:R.xs)
  return xs_.Get(index);
}
inline void R::set_xs(int index, ::google::protobuf::int64 value) {
  xs_.Set(index, value);
  // @@protoc_insertion_point(field_set:R.xs)
}
inline void R::add_xs(::google::protobuf::int64 value) {
  xs_.Add(value);
  // @@protoc_insertion_point(field_add:R.xs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
R::xs() const {
  // @@protoc_insertion_point(field_list:R.xs)
  return xs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
R::mutable_xs() {
  // @@protoc_insertion_point(field_mutable_list:R.xs)
  return &xs_;
}

// -------------------------------------------------------------------

// Rq1

// required uint32 m = 1;
inline bool Rq1::has_m() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Rq1::set_has_m() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Rq1::clear_has_m() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Rq1::clear_m() {
  m_ = 0u;
  clear_has_m();
}
inline ::google::protobuf::uint32 Rq1::m() const {
  // @@protoc_insertion_point(field_get:Rq1.m)
  return m_;
}
inline void Rq1::set_m(::google::protobuf::uint32 value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:Rq1.m)
}

// required uint64 q = 2;
inline bool Rq1::has_q() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Rq1::set_has_q() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Rq1::clear_has_q() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Rq1::clear_q() {
  q_ = GOOGLE_ULONGLONG(0);
  clear_has_q();
}
inline ::google::protobuf::uint64 Rq1::q() const {
  // @@protoc_insertion_point(field_get:Rq1.q)
  return q_;
}
inline void Rq1::set_q(::google::protobuf::uint64 value) {
  set_has_q();
  q_ = value;
  // @@protoc_insertion_point(field_set:Rq1.q)
}

// repeated sint64 xs = 3;
inline int Rq1::xs_size() const {
  return xs_.size();
}
inline void Rq1::clear_xs() {
  xs_.Clear();
}
inline ::google::protobuf::int64 Rq1::xs(int index) const {
  // @@protoc_insertion_point(field_get:Rq1.xs)
  return xs_.Get(index);
}
inline void Rq1::set_xs(int index, ::google::protobuf::int64 value) {
  xs_.Set(index, value);
  // @@protoc_insertion_point(field_set:Rq1.xs)
}
inline void Rq1::add_xs(::google::protobuf::int64 value) {
  xs_.Add(value);
  // @@protoc_insertion_point(field_add:Rq1.xs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Rq1::xs() const {
  // @@protoc_insertion_point(field_list:Rq1.xs)
  return xs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Rq1::mutable_xs() {
  // @@protoc_insertion_point(field_mutable_list:Rq1.xs)
  return &xs_;
}

// -------------------------------------------------------------------

// Kq1

// required uint32 m = 1;
inline bool Kq1::has_m() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Kq1::set_has_m() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Kq1::clear_has_m() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Kq1::clear_m() {
  m_ = 0u;
  clear_has_m();
}
inline ::google::protobuf::uint32 Kq1::m() const {
  // @@protoc_insertion_point(field_get:Kq1.m)
  return m_;
}
inline void Kq1::set_m(::google::protobuf::uint32 value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:Kq1.m)
}

// required uint64 q = 2;
inline bool Kq1::has_q() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Kq1::set_has_q() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Kq1::clear_has_q() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Kq1::clear_q() {
  q_ = GOOGLE_ULONGLONG(0);
  clear_has_q();
}
inline ::google::protobuf::uint64 Kq1::q() const {
  // @@protoc_insertion_point(field_get:Kq1.q)
  return q_;
}
inline void Kq1::set_q(::google::protobuf::uint64 value) {
  set_has_q();
  q_ = value;
  // @@protoc_insertion_point(field_set:Kq1.q)
}

// repeated double xs = 3;
inline int Kq1::xs_size() const {
  return xs_.size();
}
inline void Kq1::clear_xs() {
  xs_.Clear();
}
inline double Kq1::xs(int index) const {
  // @@protoc_insertion_point(field_get:Kq1.xs)
  return xs_.Get(index);
}
inline void Kq1::set_xs(int index, double value) {
  xs_.Set(index, value);
  // @@protoc_insertion_point(field_set:Kq1.xs)
}
inline void Kq1::add_xs(double value) {
  xs_.Add(value);
  // @@protoc_insertion_point(field_add:Kq1.xs)
}
inline const ::google::protobuf::RepeatedField< double >&
Kq1::xs() const {
  // @@protoc_insertion_point(field_list:Kq1.xs)
  return xs_;
}
inline ::google::protobuf::RepeatedField< double >*
Kq1::mutable_xs() {
  // @@protoc_insertion_point(field_mutable_list:Kq1.xs)
  return &xs_;
}

// -------------------------------------------------------------------

// RqProduct

// repeated .Rq1 rqlist = 1;
inline int RqProduct::rqlist_size() const {
  return rqlist_.size();
}
inline void RqProduct::clear_rqlist() {
  rqlist_.Clear();
}
inline const ::Rq1& RqProduct::rqlist(int index) const {
  // @@protoc_insertion_point(field_get:RqProduct.rqlist)
  return rqlist_.Get(index);
}
inline ::Rq1* RqProduct::mutable_rqlist(int index) {
  // @@protoc_insertion_point(field_mutable:RqProduct.rqlist)
  return rqlist_.Mutable(index);
}
inline ::Rq1* RqProduct::add_rqlist() {
  // @@protoc_insertion_point(field_add:RqProduct.rqlist)
  return rqlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Rq1 >&
RqProduct::rqlist() const {
  // @@protoc_insertion_point(field_list:RqProduct.rqlist)
  return rqlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::Rq1 >*
RqProduct::mutable_rqlist() {
  // @@protoc_insertion_point(field_mutable_list:RqProduct.rqlist)
  return &rqlist_;
}

// -------------------------------------------------------------------

// KqProduct

// repeated .Kq1 kqlist = 1;
inline int KqProduct::kqlist_size() const {
  return kqlist_.size();
}
inline void KqProduct::clear_kqlist() {
  kqlist_.Clear();
}
inline const ::Kq1& KqProduct::kqlist(int index) const {
  // @@protoc_insertion_point(field_get:KqProduct.kqlist)
  return kqlist_.Get(index);
}
inline ::Kq1* KqProduct::mutable_kqlist(int index) {
  // @@protoc_insertion_point(field_mutable:KqProduct.kqlist)
  return kqlist_.Mutable(index);
}
inline ::Kq1* KqProduct::add_kqlist() {
  // @@protoc_insertion_point(field_add:KqProduct.kqlist)
  return kqlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Kq1 >&
KqProduct::kqlist() const {
  // @@protoc_insertion_point(field_list:KqProduct.kqlist)
  return kqlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::Kq1 >*
KqProduct::mutable_kqlist() {
  // @@protoc_insertion_point(field_mutable_list:KqProduct.kqlist)
  return &kqlist_;
}

// -------------------------------------------------------------------

// TypeRep

// required uint64 a = 1;
inline bool TypeRep::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TypeRep::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TypeRep::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TypeRep::clear_a() {
  a_ = GOOGLE_ULONGLONG(0);
  clear_has_a();
}
inline ::google::protobuf::uint64 TypeRep::a() const {
  // @@protoc_insertion_point(field_get:TypeRep.a)
  return a_;
}
inline void TypeRep::set_a(::google::protobuf::uint64 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:TypeRep.a)
}

// required uint64 b = 2;
inline bool TypeRep::has_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TypeRep::set_has_b() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TypeRep::clear_has_b() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TypeRep::clear_b() {
  b_ = GOOGLE_ULONGLONG(0);
  clear_has_b();
}
inline ::google::protobuf::uint64 TypeRep::b() const {
  // @@protoc_insertion_point(field_get:TypeRep.b)
  return b_;
}
inline void TypeRep::set_b(::google::protobuf::uint64 value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:TypeRep.b)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Lol_2eproto__INCLUDED
