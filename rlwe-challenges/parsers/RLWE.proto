option java_package = "crypto.proto.lol";

// proto messages for the RLWE/RLWR problems

import "Lol.proto";

// Proto messages for RLWE/RLWR samples

// run this:

// hprotoc -a Lol.proto=Crypto.Proto -p Crypto.Proto RLWE.proto
// protoc RLWE.proto [-cpp_out=path/to/cpp/parser] [--java_out=path/to/java/parser] [--python_out=path/to/python/parser]

// the Sample*1 messages were used to serialize RLWE/RLWR samples in the
// RLWE/RLWR challenges, and only support cyclotomic rings mod a single modulus
message SampleCont1 {
  required Rq1 a      = 1;
  required Kq1 b      = 2;
}

message SampleDisc1 {
  required Rq1 a      = 1;
  required Rq1 b      = 2;
}

message SampleRLWR1 {
  required Rq1 a      = 1;
  required Rq1 b      = 2;  // for some modulus p < q
}

// continuous RLWE sample, possibly with mutliple moduli
message SampleCont {
  required RqProduct a = 1;
  required KqProduct b = 2;
}

// discrete RLWE sample, possibly with multiple moduli
message SampleDisc {
  required RqProduct a = 1;
  required RqProduct b = 2;
}

// RLWR sample, possibly with multiple moduli
message SampleRLWR {
  required RqProduct a = 1;
  required RqProduct b = 2;  // for some modulus p < q
}
