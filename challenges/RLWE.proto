
import "Lol.proto";

// hprotoc -I . -I ../lol -a ../lol/Lol.proto=Crypto.Lol.Types.Proto -p Crypto.Challenges.RLWE.Proto RLWE.proto

message SampleCont {
  required Rq a                = 1;
  required Kq b                = 2;
}

message SampleDisc {
  required Rq a               = 1;
  required Rq b               = 2;
}

message SampleRLWR {
  required Rq a               = 1;
  required Rq b               = 2;    // for some modulus p < q
}

message InstanceCont {
  required uint32 id          = 1;
  required uint64 m           = 2;
  required uint64 q           = 3;
  required double svar        = 4;
  required double bound       = 5;
  repeated SampleCont samples = 6;
}

message InstanceDisc {
  required uint32 id          = 1;
  required uint64 m           = 2;
  required uint64 q           = 3;
  required double svar        = 4;
  required uint64 bound       = 5;
  repeated SampleDisc samples = 6;
}

message InstanceRLWR {
  required uint32 id          = 1;
  required uint64 m           = 2;
  required uint64 q           = 3;
  required uint64 p           = 4;     // RLWR modulus p < q
  repeated SampleRLWR samples = 5;
}

message Secret {
  required uint32 id          = 1;
  required uint64 m           = 2;
  required uint64 q           = 3;
  required Rq s               = 4;
}

message Instance {
  oneof instType {
    InstanceCont instCont     = 1;
    InstanceDisc instDisc     = 2;
    InstanceRLWR instRLWR     = 3;
  }
}
