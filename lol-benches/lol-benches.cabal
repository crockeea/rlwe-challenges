name:                lol-benches
-- The package version.  See the Haskell package versioning policy (PVP)
-- for standards guiding when and how versions should be incremented.
-- http://www.haskell.org/haskellwiki/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             0.0.0.1
synopsis:            A library for benchmarking <https://hackage.haskell.org/package/lol Λ ∘ λ>.
homepage:            https://github.com/cpeikert/Lol
Bug-Reports:         https://github.com/cpeikert/Lol/issues
license:             GPL-2
license-file:        LICENSE
author:              Eric Crockett <ecrockett0@gmail.com>, Chris Peikert <cpeikert@alum.mit.edu>
maintainer:          Eric Crockett <ecrockett0@gmail.com>
copyright:           Eric Crockett, Chris Peikert
category:            Crypto
stability:           experimental
build-type:          Simple
extra-source-files:  README, CHANGES.md
cabal-version:       >= 1.10
description:
    This library contains code to benchmark <https://hackage.haskell.org/package/lol Λ ∘ λ (Lol)>.
    It is designed so that third-party tensors can be easily benchmarked using the same framework.
    For examples of how to use this library, see the benchmarks for
    <https://hackage.haskell.org/package/lol-cpp lol-cpp>.
source-repository head
  type: git
  location: https://github.com/cpeikert/Lol

library
  default-language: Haskell2010
  ghc-options: -fwarn-dodgy-imports -O2 -funfolding-creation-threshold=15000 -funfolding-use-threshold=1000
  -- ghc-options: -ddump-to-file -ddump-simpl
  -- ghc-options: -dsuppress-coercions -dsuppress-type-applications -dsuppress-uniques -dsuppress-module-prefixes

  exposed-modules:
    Crypto.Lol.Benchmarks
    Crypto.Lol.Benchmarks.CycBenches
    Crypto.Lol.Benchmarks.SimpleTensorBenches
    Crypto.Lol.Benchmarks.SimpleUCycBenches
    Crypto.Lol.Benchmarks.Standard
    Crypto.Lol.Benchmarks.TensorBenches
    Crypto.Lol.Benchmarks.UCycBenches
    Crypto.Lol.Utils.PrettyPrint.Diagnostic
    Crypto.Lol.Utils.PrettyPrint.Table

  other-modules:
    Crypto.Lol.Utils.PrettyPrint

  build-depends:
    ansi-terminal,
    base,
    containers,
    criterion,
    crypto-api,
    deepseq,
    DRBG,
    lol,
    MonadRandom,
    split,
    statistics,
    transformers

-- EAC: This really belongs in lol.cabal, but due to a cabal/stack bug, it can't right now.
Benchmark bench-lol
  type:               exitcode-stdio-1.0
  default-language:   Haskell2010
  main-is:            Main.hs
  hs-source-dirs:     exec

  ghc-options: -O2 -funfolding-creation-threshold=15000 -funfolding-use-threshold=1000

  build-depends:
    base,
    DRBG,
    lol,
    lol-benches